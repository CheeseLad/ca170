<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="darkreader darkreader--fallback" media="screen"></style><style class="darkreader darkreader--text" media="screen"></style><style class="darkreader darkreader--invert" media="screen">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^="https://www.gstatic.com/images/branding/googlelogo"], span[data-href^="https://www.hcaptcha.com/"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator {
    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;
}</style><style class="darkreader darkreader--inline" media="screen">[data-darkreader-inline-bgcolor] {
  background-color: var(--darkreader-inline-bgcolor) !important;
}
[data-darkreader-inline-bgimage] {
  background-image: var(--darkreader-inline-bgimage) !important;
}
[data-darkreader-inline-border] {
  border-color: var(--darkreader-inline-border) !important;
}
[data-darkreader-inline-border-bottom] {
  border-bottom-color: var(--darkreader-inline-border-bottom) !important;
}
[data-darkreader-inline-border-left] {
  border-left-color: var(--darkreader-inline-border-left) !important;
}
[data-darkreader-inline-border-right] {
  border-right-color: var(--darkreader-inline-border-right) !important;
}
[data-darkreader-inline-border-top] {
  border-top-color: var(--darkreader-inline-border-top) !important;
}
[data-darkreader-inline-boxshadow] {
  box-shadow: var(--darkreader-inline-boxshadow) !important;
}
[data-darkreader-inline-color] {
  color: var(--darkreader-inline-color) !important;
}
[data-darkreader-inline-fill] {
  fill: var(--darkreader-inline-fill) !important;
}
[data-darkreader-inline-stroke] {
  stroke: var(--darkreader-inline-stroke) !important;
}
[data-darkreader-inline-outline] {
  outline-color: var(--darkreader-inline-outline) !important;
}
[data-darkreader-inline-stopcolor] {
  stop-color: var(--darkreader-inline-stopcolor) !important;
}</style><style class="darkreader darkreader--variables" media="screen">:root {
   --darkreader-neutral-background: #131516;
   --darkreader-neutral-text: #d8d4cf;
   --darkreader-selection-background: #004daa;
   --darkreader-selection-text: #e8e6e3;
}</style><style class="darkreader darkreader--root-vars" media="screen"></style><style class="darkreader darkreader--user-agent" media="screen">html {
    background-color: #181a1b !important;
}
html {
    color-scheme: dark !important;
}
html, body {
    background-color: #181a1b;
}
html, body {
    border-color: #736b5e;
    color: #e8e6e3;
}
a {
    color: #3391ff;
}
table {
    border-color: #545b5e;
}
::placeholder {
    color: #b2aba1;
}
input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
    background-color: #404400 !important;
    color: #e8e6e3 !important;
}
::-webkit-scrollbar {
    background-color: #202324;
    color: #aba499;
}
::-webkit-scrollbar-thumb {
    background-color: #454a4d;
}
::-webkit-scrollbar-thumb:hover {
    background-color: #575e62;
}
::-webkit-scrollbar-thumb:active {
    background-color: #484e51;
}
::-webkit-scrollbar-corner {
    background-color: #181a1b;
}
* {
    scrollbar-color: #454a4d #202324;
}
::selection {
    background-color: #004daa !important;
    color: #e8e6e3 !important;
}
::-moz-selection {
    background-color: #004daa !important;
    color: #e8e6e3 !important;
}</style>
<title> CA170 - Introduction to Operating Systems </title>
<link rel="stylesheet" type="text/css" href="final-quiz_files/main.css"><style class="darkreader darkreader--sync" media="screen"></style>

<meta name="darkreader" content="ba4ffa1a9d8c43eabb632a8786c3e53f"><style class="darkreader darkreader--override" media="screen">.vimvixen-hint {
    background-color: #7b5300 !important;
    border-color: #d8b013 !important;
    color: #f3e8c8 !important;
}
::placeholder {
    opacity: 0.5 !important;
}
#edge-translate-panel-body,
.MuiTypography-body1,
.nfe-quote-text {
    color: var(--darkreader-neutral-text) !important;
}
gr-main-header {
    background-color: #0f3a48 !important;
}
.tou-z65h9k,
.tou-mignzq,
.tou-1b6i2ox,
.tou-lnqlqk {
    background-color: var(--darkreader-neutral-background) !important;
}
.tou-75mvi {
    background-color: #032029 !important;
}
.tou-ta9e87,
.tou-1w3fhi0,
.tou-1b8t2us,
.tou-py7lfi,
.tou-1lpmd9d,
.tou-1frrtv8,
.tou-17ezmgn {
    background-color: #0a0a0a !important;
}
.tou-uknfeu {
    background-color: #231603 !important;
}
.tou-6i3zyv {
    background-color: #19576c !important;
}
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }</style></head>

<body data-new-gr-c-s-check-loaded="8.905.0" data-gr-ext-installed="">
  
<div id="boxinpage">

<br>

<h1> CA170 - Introduction to Operating Systems </h1>
 


<pre>
</pre>



<form enctype="multipart/form-data" method="post" action="https://computing.dcu.ie/~humphrys/quiz.ca170.php">


 

<table style="--darkreader-inline-bgcolor: #181a1b;" data-darkreader-inline-bgcolor="" cellspacing="0" cellpadding="15" bordercolor="black" border="1" bgcolor="white">

 

<tbody><tr> <td> Name </td> <td>			<input size="80" name="name" id="name">  </td> </tr> 
<tr> <td> Student number </td> <td>		<input size="80" name="no" id="no">  </td> </tr> 
<tr> <td> Linux userid </td> <td>		<input size="80" name="userid" id="userid">  </td> </tr> 
<tr> <td> Email </td> <td>			<input size="80" name="email" id="email">  </td> </tr> 
<tr> <td> Quiz password  </td> <td> 	<input size="80" name="password" id="password" type="password">  </td> </tr> 

</tbody></table>
<p>

</p><pre>  
</pre>



<hr>

<h1> Multiple choice </h1>

<b>
Answer all 25  multiple-choice questions.

1 mark each.
There is <i>no</i> negative marking.
</b>


<pre>
</pre>
 


<ol>


<li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">  Which of the following is an unusual permission field for a UNIX file: 
<p>
<input type="radio" name="1" value="1" id="1_1"> <label for="1_1"> <tt> ----r-xr-x </tt> </label> <br> 
<input type="radio" name="1" value="2" id="1_2"> <label for="1_2"> <tt> -rwx---r-x </tt> </label> <br> 
<input type="radio" name="1" value="3" id="1_3"> <label for="1_3"> <tt> -rwxr-x--- </tt> </label> <br> 
<input type="radio" name="1" value="4" id="1_4"> <label for="1_4"> <tt> -rwxr-xr-x </tt> </label> <br> 
<input type="radio" name="1" value="5" id="1_5"> <label for="1_5"> <tt> -rwx------ </tt> </label> <br> 
</p><p><br>
</p></li><li class="question" ca170="" ca216="" ca651="" ca170open="">  When a program is started: 
<p>
<input type="radio" name="2" value="1" id="2_1"> <label for="2_1"> A copy of it is made in a volatile medium. </label> <br> 
<input type="radio" name="2" value="2" id="2_2"> <label for="2_2"> Its data  is copied into the registers. </label> <br> 
<input type="radio" name="2" value="3" id="2_3"> <label for="2_3"> No copy of it is made, since a copy already exists. </label> <br> 
<input type="radio" name="2" value="4" id="2_4"> <label for="2_4"> A copy of it is made in a non-volatile medium. </label> <br> 
<input type="radio" name="2" value="5" id="2_5"> <label for="2_5"> It is pre-loaded into memory. </label> <br> 
</p><p><br>
</p></li><li class="question" ca170="" ca216="" ca170open=""> This program:  <blockquote> <tt> // define a function: </tt> <br>  <tt> function f() { f(); }   // function calls itself </tt> <br> <tt> // start the program: </tt> <br>  <tt> f(); </tt> </blockquote>  
<p>
<input type="radio" name="3" value="1" id="3_1"> <label for="3_1"> Blocks all other processes from running. </label> <br> 
<input type="radio" name="3" value="2" id="3_2"> <label for="3_2"> Is detected by the Operating System and terminated. </label> <br> 
<input type="radio" name="3" value="3" id="3_3"> <label for="3_3"> Runs forever, time-sliced. </label> <br> 
<input type="radio" name="3" value="4" id="3_4"> <label for="3_4"> Runs time-sliced until it crashes by running out of stack space. </label> <br> 
<input type="radio" name="3" value="5" id="3_5"> <label for="3_5"> Runs time-sliced until it crashes with a bad memory access. </label> <br> 
</p><p><br>
</p></li><li class="question" ca170="" ca651="" ca170open=""> Linux dominates supercomputers  and other specialist  computer niches because: 
<p>
<input type="radio" name="4" value="1" id="4_1"> <label for="4_1"> Windows Server dominates the server  market. </label> <br> 
<input type="radio" name="4" value="2" id="4_2"> <label for="4_2"> Microsoft does not write   for supercomputers. </label> <br> 
<input type="radio" name="4" value="3" id="4_3"> <label for="4_3"> Microsoft does not write   for servers. </label> <br> 
<input type="radio" name="4" value="4" id="4_4"> <label for="4_4"> Windows can be customised to unusual hardware. </label> <br> 
<input type="radio" name="4" value="5" id="4_5"> <label for="4_5"> Linux does not dominate that market. </label> <br> 
<input type="radio" name="4" value="6" id="4_6"> <label for="4_6"> Unix/Linux  pulled ahead in the server market first. </label> <br> 
<input type="radio" name="4" value="7" id="4_7"> <label for="4_7"> Open source  Linux  can be customised to  unusual hardware. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca249="" ca651="" ca170open="">   One of the following file protections will break your web page: 
<p>
<input type="radio" name="5" value="1" id="5_1"> <label for="5_1"> <tt> -------r-x </tt> </label> <br> 
<input type="radio" name="5" value="2" id="5_2"> <label for="5_2"> <tt> -rwx---r-x </tt> </label> <br> 
<input type="radio" name="5" value="3" id="5_3"> <label for="5_3"> <tt> -rwxr-xr-x </tt> </label> <br> 
<input type="radio" name="5" value="4" id="5_4"> <label for="5_4"> <tt> -rwx---r-- </tt> </label> <br> 
<input type="radio" name="5" value="5" id="5_5"> <label for="5_5"> <tt> -rwxr-x--x </tt> </label> <br> 
<input type="radio" name="5" value="6" id="5_6"> <label for="5_6"> <tt> -------r-- </tt> </label> <br> 
<input type="radio" name="5" value="7" id="5_7"> <label for="5_7"> <tt> -rwxr-xr-- </tt> </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open=""> What is wrong with this command? <br> <tt> wget -O - https://biscuits.com/biscuit.jpg </tt> 
<p>
<input type="radio" name="6" value="1" id="6_1"> <label for="6_1"> The URL may require https. </label> <br> 
<input type="radio" name="6" value="2" id="6_2"> <label for="6_2"> The URL may require www. </label> <br> 
<input type="radio" name="6" value="3" id="6_3"> <label for="6_3"> wget may not be installed. </label> <br> 
<input type="radio" name="6" value="4" id="6_4"> <label for="6_4"> The JPEG should be saved into a file. </label> <br> 
<input type="radio" name="6" value="5" id="6_5"> <label for="6_5"> The URL may not exist. </label> <br> 
<input type="radio" name="6" value="6" id="6_6"> <label for="6_6"> There is nothing wrong with this command. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">
  What command will search all your files for   lines containing  start 
of line, then any number of spaces, then the string "born"?  
<p>
<input type="radio" name="7" value="1" id="7_1"> <label for="7_1"> <tt> grep "^born" * </tt> </label> <br> 
<input type="radio" name="7" value="2" id="7_2"> <label for="7_2"> <tt> grep "^ born" * </tt> </label> <br> 
<input type="radio" name="7" value="3" id="7_3"> <label for="7_3"> <tt> grep "^ .born" * </tt> </label> <br> 
<input type="radio" name="7" value="4" id="7_4"> <label for="7_4"> <tt> grep "^ .*born" * </tt> </label> <br> 
<input type="radio" name="7" value="5" id="7_5"> <label for="7_5"> <tt> grep "^.born" * </tt> </label> <br> 
<input type="radio" name="7" value="6" id="7_6"> <label for="7_6"> <tt> grep "born" * </tt> </label> <br> 
<input type="radio" name="7" value="7" id="7_7"> <label for="7_7"> <tt> grep "^ *born" * </tt> </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">   If a program is not in the directories listed in the  "PATH" environment variable: 
<p>
<input type="radio" name="8" value="1" id="8_1"> <label for="8_1"> The directory needs to be put into the PATH. </label> <br> 
<input type="radio" name="8" value="2" id="8_2"> <label for="8_2"> It needs to be executable to be run. </label> <br> 
<input type="radio" name="8" value="3" id="8_3"> <label for="8_3"> It can be run by typing its absolute file path. </label> <br> 
<input type="radio" name="8" value="4" id="8_4"> <label for="8_4"> It is a system error. </label> <br> 
<input type="radio" name="8" value="5" id="8_5"> <label for="8_5"> It can run as normal. </label> <br> 
<input type="radio" name="8" value="6" id="8_6"> <label for="8_6"> It cannot be run. </label> <br> 
<input type="radio" name="8" value="7" id="8_7"> <label for="8_7"> The OS is broken. </label> <br> 
</p><p><br>
</p></li><li class="question" ca170="" ca216="" ca249="" ca651="" ca170open=""> On Linux,  when you type a normal command,  it should be  in the PATH to run. Yet when you  run <tt> ps -f </tt>    you see  a program running that is not in the PATH. How can this happen?   
<p>
<input type="radio" name="9" value="1" id="9_1"> <label for="9_1"> There must be  a system error. </label> <br> 
<input type="radio" name="9" value="2" id="9_2"> <label for="9_2"> <tt> ps -f </tt>  will not show this. </label> <br> 
<input type="radio" name="9" value="3" id="9_3"> <label for="9_3"> This cannot happen. </label> <br> 
<input type="radio" name="9" value="4" id="9_4"> <label for="9_4"> This always happens. </label> <br> 
<input type="radio" name="9" value="5" id="9_5"> <label for="9_5"> The PATH must be wrong. </label> <br> 
<input type="radio" name="9" value="6" id="9_6"> <label for="9_6"> You can run programs that are not in the PATH. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca170="" ca170open="">  Compile-time binding works only on a: 
<p>
<input type="radio" name="10" value="1" id="10_1"> <label for="10_1"> Multiple user, single process system. </label> <br> 
<input type="radio" name="10" value="2" id="10_2"> <label for="10_2"> Multiple user, multiple process system. </label> <br> 
<input type="radio" name="10" value="3" id="10_3"> <label for="10_3"> Single user, multiple process system. </label> <br> 
<input type="radio" name="10" value="4" id="10_4"> <label for="10_4"> Single user, single process system. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca170="" ca170open="">  As a result of the "unused RAM is wasted RAM" idea, we may: 
<p>
<input type="radio" name="11" value="1" id="11_1"> <label for="11_1"> Keep data from terminated processes in memory.  	<i>And </i>  pre-load processes that may be run later. </label> <br> 
<input type="radio" name="11" value="2" id="11_2"> <label for="11_2"> Pre-load processes that may be run later. </label> <br> 
<input type="radio" name="11" value="3" id="11_3"> <label for="11_3"> Allocate more memory than  processes need. </label> <br> 
<input type="radio" name="11" value="4" id="11_4"> <label for="11_4"> Run OS processes until memory is full. </label> <br> 
<input type="radio" name="11" value="5" id="11_5"> <label for="11_5"> Run more processes until memory is full. </label> <br> 
<input type="radio" name="11" value="6" id="11_6"> <label for="11_6"> Keep data from terminated processes in memory. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">
  In my Shakespeare directory, you  want to count on how many lines   
the string "King"   appears in  Shakespeare. Which of the following will
   answer that question?  
<p>
<input type="radio" name="12" value="1" id="12_1"> <label for="12_1"> <tt> grep -i King */act* | wc -l </tt> </label> <br> 
<input type="radio" name="12" value="2" id="12_2"> <label for="12_2"> <tt> grep -c King */act* | wc -l </tt> </label> <br> 
<input type="radio" name="12" value="3" id="12_3"> <label for="12_3"> <tt> grep -ic King */act* | wc -l </tt> </label> <br> 
<input type="radio" name="12" value="4" id="12_4"> <label for="12_4"> <tt> grep -ic King */act*   </tt> </label> <br> 
<input type="radio" name="12" value="5" id="12_5"> <label for="12_5"> <tt> grep -c King */act*   </tt> </label> <br> 
<input type="radio" name="12" value="6" id="12_6"> <label for="12_6"> <tt> grep -i King */act*   </tt> </label> <br> 
<input type="radio" name="12" value="7" id="12_7"> <label for="12_7"> <tt> grep King */act*   </tt> </label> <br> 
<input type="radio" name="12" value="8" id="12_8"> <label for="12_8"> <tt> grep King */act* | wc -l </tt> </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">  What will this Shell script do? <p> <tt> for i in *  </tt> <br> <tt> do </tt> <br> <tt>  rm i </tt> <br> <tt> done </tt>  </p><p>    
</p><p>
<input type="radio" name="13" value="1" id="13_1"> <label for="13_1"> It is a syntax error. </label> <br> 
<input type="radio" name="13" value="2" id="13_2"> <label for="13_2"> Remove a file called i, perhaps multiple times. </label> <br> 
<input type="radio" name="13" value="3" id="13_3"> <label for="13_3"> Remove all the files in the current directory. </label> <br> 
<input type="radio" name="13" value="4" id="13_4"> <label for="13_4"> Remove all the files given in the arguments to the program. </label> <br> 
<input type="radio" name="13" value="5" id="13_5"> <label for="13_5"> Remove all hidden files in the current directory. </label> <br> 
<input type="radio" name="13" value="6" id="13_6"> <label for="13_6"> Remove all the files in the current directory, except for hidden files. </label> <br> 
</p><p><br>
</p></li><li class="question" ca170="" ca216="" ca651="" ca170open=""> One of these is true. 
<p>
<input type="radio" name="14" value="1" id="14_1"> <label for="14_1"> All users need the command-line. </label> <br> 
<input type="radio" name="14" value="2" id="14_2"> <label for="14_2"> GUIs came before command-lines. </label> <br> 
<input type="radio" name="14" value="3" id="14_3"> <label for="14_3"> Android's Unix-like command-line was key to its success. </label> <br> 
<input type="radio" name="14" value="4" id="14_4"> <label for="14_4"> A command-line system is easier to automate than a  GUI system. </label> <br> 
<input type="radio" name="14" value="5" id="14_5"> <label for="14_5"> Unix systems rarely have a GUI. </label> <br> 
<input type="radio" name="14" value="6" id="14_6"> <label for="14_6"> A command-line system is easier to use  than a  GUI system. </label> <br> 
<input type="radio" name="14" value="7" id="14_7"> <label for="14_7"> Apple's Unix-like command-line was key to its success. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca249="" ca651="" ca170open="">  This command: <br> <tt> sed -e 's|&lt;|\&amp;lt;|g'  </tt> 
<p>
<input type="radio" name="15" value="1" id="15_1"> <label for="15_1"> is displaying the start of HTML tags but not getting them interpreted. </label> <br> 
<input type="radio" name="15" value="2" id="15_2"> <label for="15_2"> is redirecting output to a file. </label> <br> 
<input type="radio" name="15" value="3" id="15_3"> <label for="15_3"> is a syntax error. </label> <br> 
<input type="radio" name="15" value="4" id="15_4"> <label for="15_4"> is blanking out the start of HTML tags. </label> <br> 
<input type="radio" name="15" value="5" id="15_5"> <label for="15_5"> is removing HTML tags. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca170="" ca170open="">  If we have to remove a page from memory,  what do we do? 
<p>
<input type="radio" name="16" value="1" id="16_1"> <label for="16_1"> Discard it completely, since it is no longer needed. </label> <br> 
<input type="radio" name="16" value="2" id="16_2"> <label for="16_2"> This never happens. </label> <br> 
<input type="radio" name="16" value="3" id="16_3"> <label for="16_3"> Discard it completely, since it exists already on disk. </label> <br> 
<input type="radio" name="16" value="4" id="16_4"> <label for="16_4"> Sometimes write it to disk, sometimes discard it completely. </label> <br> 
<input type="radio" name="16" value="5" id="16_5"> <label for="16_5"> Terminate and restart the process. </label> <br> 
<input type="radio" name="16" value="6" id="16_6"> <label for="16_6"> Write it to disk. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca170="" ca170open="">  A user 
tries to start a program on a single-user, multiple-process system. Why 
is it not practical for the OS to say to the user: <i> "I'm sorry, 
another program is occupying memory space 7000-8000.  Please terminate 
the other program before running your program"</i> 
<p>
<input type="radio" name="17" value="1" id="17_1"> <label for="17_1"> The source code may not be available. </label> <br> 
<input type="radio" name="17" value="2" id="17_2"> <label for="17_2"> It may not be possible to terminate the other program. </label> <br> 
<input type="radio" name="17" value="3" id="17_3"> <label for="17_3"> The user will not understand this message. </label> <br> 
<input type="radio" name="17" value="4" id="17_4"> <label for="17_4"> Our program should not ask for memory space 7000-8000. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">  I am in the directory  &nbsp; <b><tt> /stuff/and/things </tt></b> &nbsp; and I type: &nbsp; <b><tt> cd ../../../more/things </tt></b>   &nbsp; - What directory am I in now? 
<p>
<input type="radio" name="18" value="1" id="18_1"> <label for="18_1"> <tt> /stuff/and/more/things </tt> </label> <br> 
<input type="radio" name="18" value="2" id="18_2"> <label for="18_2"> <tt> /stuff/more/things </tt> </label> <br> 
<input type="radio" name="18" value="3" id="18_3"> <label for="18_3"> <tt> /more/things </tt> </label> <br> 
<input type="radio" name="18" value="4" id="18_4"> <label for="18_4"> <tt> /stuff/and/things/more/things </tt> </label> <br> 
<input type="radio" name="18" value="5" id="18_5"> <label for="18_5"> The command is an error. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open=""> The commands "cd" followed by "cd public_html" followed by "mkdir ../stuff"  make a directory called:  
<p>
<input type="radio" name="19" value="1" id="19_1"> <label for="19_1"> $HOME/public_html/stuff </label> <br> 
<input type="radio" name="19" value="2" id="19_2"> <label for="19_2"> $HOME/../stuff </label> <br> 
<input type="radio" name="19" value="3" id="19_3"> <label for="19_3"> It does not make a directory. </label> <br> 
<input type="radio" name="19" value="4" id="19_4"> <label for="19_4"> $HOME/stuff </label> <br> 
<input type="radio" name="19" value="5" id="19_5"> <label for="19_5"> /stuff </label> <br> 
<input type="radio" name="19" value="6" id="19_6"> <label for="19_6"> /public_html/stuff </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca249="" ca651="" ca170open="">  What is this script doing?   <p>  <tt>  grep string file &gt; /dev/null </tt> <br> <tt>  if test "$?" = "0"  </tt> <br> <tt>  then </tt> <br> <tt>   ...  </tt>   </p><p>      
</p><p>
<input type="radio" name="20" value="1" id="20_1"> <label for="20_1"> Listing the lines of the file in which the string occurs. </label> <br> 
<input type="radio" name="20" value="2" id="20_2"> <label for="20_2"> Testing whether or not the string occurs in the file, without listing the lines on which it does. </label> <br> 
<input type="radio" name="20" value="3" id="20_3"> <label for="20_3"> Listing the lines of the file in which the string occurs, then querying the number of arguments to the program. </label> <br> 
<input type="radio" name="20" value="4" id="20_4"> <label for="20_4"> 
Building an output file of the lines on which the string occurs, and 
then proceeding with a test of whether there were any such lines. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca249="" ca651="" ca170open="">  Only one of the following  makes any kind of sense as a possible permission field for a UNIX file. Which one? 
<p>
<input type="radio" name="21" value="1" id="21_1"> <label for="21_1"> <tt> --w------- </tt> </label> <br> 
<input type="radio" name="21" value="2" id="21_2"> <label for="21_2"> <tt> ----rwxrwx </tt> </label> <br> 
<input type="radio" name="21" value="3" id="21_3"> <label for="21_3"> <tt> --rwx----- </tt> </label> <br> 
<input type="radio" name="21" value="4" id="21_4"> <label for="21_4"> <tt> -r-------- </tt> </label> <br> 
<input type="radio" name="21" value="5" id="21_5"> <label for="21_5"> <tt> ----r----- </tt> </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">  Typing the command <tt> man man &gt; man </tt>  does what? 
<p>
<input type="radio" name="22" value="1" id="22_1"> <label for="22_1"> Permissions error. </label> <br> 
<input type="radio" name="22" value="2" id="22_2"> <label for="22_2"> "man" should only appear once. </label> <br> 
<input type="radio" name="22" value="3" id="22_3"> <label for="22_3"> Syntax error. </label> <br> 
<input type="radio" name="22" value="4" id="22_4"> <label for="22_4"> "man" should only appear twice. </label> <br> 
<input type="radio" name="22" value="5" id="22_5"> <label for="22_5"> Correct syntax, but bad argument to "man". </label> <br> 
<input type="radio" name="22" value="6" id="22_6"> <label for="22_6"> Stores the manual page for "man" in a file with a terrible filename. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open="">  What will this   shell script do? <p>  <tt> ls$1 </tt> </p><p> 
</p><p>
<input type="radio" name="23" value="1" id="23_1"> <label for="23_1"> List the files given in the argument. </label> <br> 
<input type="radio" name="23" value="2" id="23_2"> <label for="23_2"> List the files given in the arguments. </label> <br> 
<input type="radio" name="23" value="3" id="23_3"> <label for="23_3"> List all files. </label> <br> 
<input type="radio" name="23" value="4" id="23_4"> <label for="23_4"> Probably fail unless arguments are blank. </label> <br> 
<input type="radio" name="23" value="5" id="23_5"> <label for="23_5"> Will always fail. </label> <br> 
</p><p><br>
</p></li><li class="question" ca216="" ca170="" ca170open="">  On a multi-user system, when one user's program divides by zero: 
<p>
<input type="radio" name="24" value="1" id="24_1"> <label for="24_1"> It keeps running, but no other user's program can run. </label> <br> 
<input type="radio" name="24" value="2" id="24_2"> <label for="24_2"> The program has to be re-loaded. </label> <br> 
<input type="radio" name="24" value="3" id="24_3"> <label for="24_3"> An interrupt is generated and the program is terminated. </label> <br> 
<input type="radio" name="24" value="4" id="24_4"> <label for="24_4"> It keeps running, interleaved with other users' programs. </label> <br> 
</p><p><br>
</p></li><li class="question" ca114="" ca114open="" ca170="" ca216="" ca249="" ca651="" ca170open=""> We are  searching for text in  chapters of a book, called names like <tt> chap17.html</tt>. One of these is definitely not right:  
<p>
<input type="radio" name="25" value="1" id="25_1"> <label for="25_1"> <tt> grep Scotland ../chap*html </tt> </label> <br> 
<input type="radio" name="25" value="2" id="25_2"> <label for="25_2"> <tt> grep Scotland chap*html  </tt> </label> <br> 
<input type="radio" name="25" value="3" id="25_3"> <label for="25_3"> <tt> grep Scotland \*chap*html  </tt> </label> <br> 
<input type="radio" name="25" value="4" id="25_4"> <label for="25_4"> <tt> grep Scotland /*chap*html  </tt> </label> <br> 
<input type="radio" name="25" value="5" id="25_5"> <label for="25_5"> <tt> grep Scotland */*/chap*html  </tt> </label> <br> 
<input type="radio" name="25" value="6" id="25_6"> <label for="25_6"> <tt> grep Scotland *chap*html  </tt> </label> <br> 
<input type="radio" name="25" value="7" id="25_7"> <label for="25_7"> <tt> grep Scotland ./chap*html </tt> </label> <br> 
<input type="radio" name="25" value="8" id="25_8"> <label for="25_8"> <tt> grep Scotland */chap*html  </tt> </label> <br> 
</p><p><br>



</p></li></ol>


 
<pre>
</pre>

 
 

<!--

<HR >

<H1> Bonus question </H1>

<b> 

Answer the     bonus question.
 
Total 10 marks.
</b>


<OL>
  

  <LI>  
Tell me about some interesting feature of an operating system (Windows, Mac, UNIX, Linux, or any other)
 that was <I>not </I> on the course.

</OL>

<PRE>
  
</PRE>


<TABLE  bgcolor=white  border=1  BORDERCOLOR=silver    cellpadding=15  cellspacing=0  >

<TR> <td> Answer </td> <td>		<textarea style="overflow:scroll"  cols=80  rows=30   name="bonus" 	id="bonus"  ></textarea>  </td> </tr> 
 
</table>

<PRE>

</PRE>
 
-->




<input type="submit" value="Submit">
<p>

<br>

If you make an error, just press "Back" and upload again. I'll work it out.

</p></form>


<pre>
</pre>

</div>






</body><grammarly-desktop-integration data-grammarly-shadow-root="true"></grammarly-desktop-integration></html>